// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  var app1;

  app1 = angular.module("myApp.controllers", []);

  app1.controller("LogoutController", [
    '$scope', '$location', 'localStorageService', 'User', function($scope, $location, localStorageService, User) {
      console.log("logging out");
      localStorageService.clearAll();
      User.authenticated = false;
      return $location.path("/sign_in");
    }
  ]);

  app1.controller("menuController", [
    '$scope', '$location', '$rootScope', function($scope, $location, $rootScope) {
      $scope.appLoaded = false;
      $scope.closeLeft = function() {
        return $scope.sideMenuController.close();
      };
      $scope.toggleLeft = function() {
        return $scope.sideMenuController.toggleLeft();
      };
      $scope.isLoading = true;
      $scope.loadingMessage = "oneForm";
      $scope.$on("$routeChangeSuccess", function() {
        console.log("running");
        $scope.$broadcast('scroll.resize');
        return $scope.closeLeft();
      });
      $rootScope.startLoad = function(loadingMessage) {
        $scope.isLoading = true;
        return $scope.loadingMessage = loadingMessage ? loadingMessage : "Loading...";
      };
      $rootScope.stopLoad = function() {
        $scope.appLoaded = true;
        $scope.isLoading = false;
        $scope.loadingMessage = "Loading...";
        return $rootScope.$apply();
      };
      $rootScope.appReady = function() {
        return $scope.appLoaded = true;
      };
      $rootScope.appUnready = function() {
        return $scope.appLoaded = false;
      };
      return $scope.onRefresh = function() {
        return $rootScope.updateUser(null, null, function() {
          return raise_error_message("Successful Update");
        });
      };
    }
  ]);

  app1.controller("SignInController", [
    '$scope', '$http', 'User', '$location', '$rootScope', 'formsService', 'fieldsService', 'localStorageService', function($scope, $http, User, $location, $rootScope, formsService, fieldsService, localStorageService) {
      var local;
      $scope.signIn = function(user, email, secret) {
        var loadMessage, successUpdate;
        if (!((email != null) && (secret != null))) {
          email = user.email;
          secret = CryptoJS.SHA512(user.email + 'oneform.in' + user.secret).toString();
        }
        loadMessage = $scope.loadingMessage ? $scope.loadingMessage : "Loading...";
        $rootScope.startLoad(loadMessage);
        successUpdate = function() {
          $rootScope.appReady();
          $location.path("/all_forms");
          $rootScope.stopLoad();
          return raise_error_message("Login Successful");
        };
        return $rootScope.updateUser(email, secret, successUpdate);
      };
      local = {};
      local['email'] = localStorageService.get('email');
      local['secret'] = localStorageService.get('secret');
      console.log(local);
      if (User.authenticated) {
        $location.path("/all_forms");
        return $rootScope.$apply();
      } else if ((local.email != null) && (local.secret != null)) {
        console.log("authenticating1");
        return $scope.signIn("", local['email'], local['secret']);
      } else {
        $rootScope.appReady();
        return $rootScope.stopLoad();
      }
    }
  ]);

  app1.controller("SignUpController", [
    '$scope', '$location', '$rootScope', 'localStorageService', function($scope, $location, $rootScope, localStorageService) {
      $rootScope.appReady();
      $rootScope.stopLoad();
      $scope.userSignUp = {};
      $scope.user = {
        firstName: {
          name: "First Name",
          id: "firstName"
        },
        lastName: {
          name: "Last Name",
          id: "lastName"
        },
        email: {
          name: "Email",
          id: "email"
        },
        uniqueId: {
          name: "UDID (Emirates Id Number)",
          id: "internalId"
        },
        password: {
          name: "Password",
          id: "password"
        }
      };
      return $scope.signUp = function(user) {
        var originalData, success;
        console.log("creating user");
        console.log(user);
        console.log($scope.signUpForm.$valid);
        $rootScope.startLoad("Creating Account...");
        if ($scope.signUpForm.$valid) {
          console.log($scope.userSignUp);
          $scope.userSignUp = angular.copy(user);
          $scope.userSignUp["secret"] = CryptoJS.SHA512($scope.userSignUp["email"] + 'oneform.in' + $scope.userSignUp["password"]).toString();
          delete $scope.userSignUp["password"];
          originalData = $scope.userSignUp;
          success = function(data, textStatus, jqXHR) {
            localStorageService.add('email', originalData["email"]);
            localStorageService.add('secret', originalData["secret"]);
            console.log("added to localStorageService");
            $location.path("/sign_in");
            $location.replace();
            $rootScope.appUnready();
            return $rootScope.$apply();
          };
          return make_request("/users", "POST", originalData, success);
        } else {
          raise_error_message("Required fields missing");
          return $rootScope.stopLoad();
        }
      };
    }
  ]);

  app1.controller("FormController", [
    '$scope', '$routeParams', 'User', 'formsService', 'fieldsService', '$rootScope', function($scope, $routeParams, User, formsService, fieldsService, $rootScope) {
      var field_id, _i, _len, _ref;
      $scope.current_form_id = $routeParams._id;
      $scope.current_form = formsService['data'][$scope.current_form_id];
      console.log("scope._id, formsService, fieldsService");
      console.log($scope.current_form_id);
      console.log(formsService);
      console.log(fieldsService);
      $scope.fields = [];
      _ref = formsService.data[$scope.current_form_id].fields;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        field_id = _ref[_i];
        $scope.fields.push(fieldsService.data[field_id]);
      }
      console.log($scope.fields);
      $scope.update = function(fieldName, answer) {
        var data;
        if ($scope.fieldName.$valid && UserService.isLogged === true) {
          return data = {
            id: UserService.data["id"],
            secret: UserService.secret
          };
        }
      };
      return $scope.post_form = function() {
        var data, dataForm, field, fieldData, route, routeForm, succesfullUpload, successData, _j, _len1;
        console.log(User);
        fieldData = $scope.fields;
        if (fieldData != null) {
          $scope.status = "sending";
          succesfullUpload = true;
          for (_j = 0, _len1 = fieldData.length; _j < _len1; _j++) {
            field = fieldData[_j];
            successData = function(data, textStatus, jqXHR) {
              var dataOrgs, orgsRoute;
              console.log("data result");
              console.log(data);
              if (data.status !== 200) {
                succesfullUpload = false;
              }
              $scope.status = "confirmed";
              console.log("ORGSS");
              orgsRoute = "/users/" + User['data']['_id'] + "/data/" + field._id + "/orgs";
              dataOrgs = {
                _id: User['data']['_id'],
                secret: User['data']['secret'],
                orgs: $scope.current_form['orgs']
              };
              make_request(orgsRoute, "POST", dataOrgs, null, null, "OrgsResponse");
              return console.log("ORGSS DONE");
            };
            data = {
              _id: User['data']['_id'],
              secret: User['data']['secret'],
              fieldId: field._id,
              value: field.value
            };
            console.log(data);
            route = "/users/" + User['data']['_id'] + "/data";
            make_request(route, "POST", data, successData);
          }
          if (succesfullUpload === true) {
            console.log("form:!@");
            console.log($scope.current_form);
            routeForm = "/users/" + User['data']['_id'] + "/forms";
            dataForm = {
              _id: User['data']['_id'],
              secret: User['data']['secret'],
              formId: $scope.current_form_id
            };
            return make_request(routeForm, "POST", dataForm);
          } else {
            raise_error_message("Error uploading form");
            return $rootScope.stopLoad();
          }
        } else {
          raise_error_message("Required fields missing");
          return $rootScope.stopLoad();
        }
      };
    }
  ]);

  app1.controller("FormDisplayController", [
    '$scope', 'formsService', function($scope, formsService) {
      $scope.query = {
        name: "Search",
        _id: "formSearch"
      };
      console.log(formsService);
      return $scope.forms = formsService.orderedData;
    }
  ]);

  app1.controller("MyDataController", [
    '$scope', 'User', 'fieldsService', function($scope, User, fieldsService) {
      var key, mydata, value, _ref, _ref1;
      console.log(User);
      mydata = {
        'profile': [],
        'data': []
      };
      console.log("MYUSER");
      console.log(User);
      _ref = User['data']['profile'];
      for (key in _ref) {
        value = _ref[key];
        mydata['profile'].push({
          name: key,
          value: value
        });
      }
      _ref1 = User['data']['data'];
      for (key in _ref1) {
        value = _ref1[key];
        mydata['data'].push({
          name: fieldsService['data'][key]['name'],
          value: value['value'],
          access: value['access']
        });
      }
      $scope.mydata = mydata;
      console.log("MYDATA");
      console.log($scope.mydata);
      return console.log(fieldsService);
    }
  ]);

  app1.controller("MyFormsController", [
    '$scope', 'User', 'fieldsService', 'fieldsService', function($scope, User, fieldsService, formsService) {
      var key, mydata, value, _ref, _ref1;
      console.log(User);
      mydata = {
        'profile': [],
        'data': []
      };
      console.log("MYUSER");
      console.log(User);
      _ref = User['data']['profile'];
      for (key in _ref) {
        value = _ref[key];
        mydata['profile'].push({
          name: key,
          value: value
        });
      }
      _ref1 = User['data']['data'];
      for (key in _ref1) {
        value = _ref1[key];
        mydata['data'].push({
          name: fieldsService['data'][key]['name'],
          value: value['value'],
          access: value['access']
        });
      }
      $scope.mydata = mydata;
      console.log("MYDATA");
      console.log($scope.mydata);
      return console.log(fieldsService);
    }
  ]);

  app1.controller("IndexController", [
    '$rootscope', 'User', function($rootscope, User) {
      var onRefresh;
      $scope.status = "Pull to reload";
      return onRefresh = function() {
        var email, secret;
        $scope.status = "Refreshing";
        if (User.authenticated != null) {
          email = User.profile.email;
          secret = User.secret;
          return $rootScope.updateUser(email, secret);
        }
      };
    }
  ]);

}).call(this);
