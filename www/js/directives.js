// Generated by CoffeeScript 1.6.3
(function() {
  "use strict";
  var app1;

  app1 = angular.module("myApp.directives", []);

  app1.directive("appVersion", [
    "version", function(version) {
      return function(scope, elm, attrs) {
        return elm.text(version);
      };
    }
  ]);

  app1.directive("blur", function() {
    return function(scope, element, attrs) {
      return element.bind("blur", function() {
        return scope.$apply(attrs.blur);
      });
    };
  });

  app1.directive("checkUser", [
    "$rootScope", "$location", "userSrv", function($root, $location, userSrv) {
      return {
        link: function(scope, elem, attrs, ctrl) {
          return $root.$on("$routeChangeStart", function(event, currRoute, prevRoute) {
            if (!prevRoute.access.isFree && !userSrv.isLogged) {
              return $location.path("/view1");
            }
          });
        }
      };
    }
  ]);

  app1.directive("sidemenu", function() {
    return {
      restrict: "E",
      templateUrl: "partials/sidemenu.html"
    };
  });

  app1.directive("inputForm", function() {
    return {
      restrict: "E",
      transclude: true,
      templateUrl: "partials/input-form.html"
    };
  });

  app1.directive("inputField", function() {
    return {
      restrict: "E",
      templateUrl: "partials/input-field.html",
      scope: {
        fieldInfo: "=field",
        keyup: "&"
      },
      link: function(scope, element, attrs) {
        scope.keyup = function($event) {
          return scope.fieldInfo.value = element.find("input").val();
        };
        console.log("attrs");
        console.log(attrs);
        scope.htmltype = attrs.htmltype;
        scope.disabledstate = attrs.disabledstate;
        console.log(scope.disabledstate);
        return console.log(scope.htmltype);
      }
    };
  });

  app1.directive("bigQuery", function() {
    return {
      restrict: "E",
      templateUrl: "partials/big-query.html",
      scope: {
        fieldInfo: "=field",
        keyup: "&"
      },
      link: function(scope, element, attrs) {
        return scope.keyup = function($event) {
          return scope.fieldInfo.value = element.find("input").val();
        };
      }
    };
  });

}).call(this);
